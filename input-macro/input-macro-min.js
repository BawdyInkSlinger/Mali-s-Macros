/* Mali's input macro set */

((e=0)=>{function t(e,t){let a,[r,i]=e.args,n=typeof r,s=t.preset.type??"string";if(r instanceof RegExp){if("string"!==s)return this.error(`A ${t.type} input doesn't yield a string, you can't test it against a regular expression.`);a=e=>r.test(e)}else if(r instanceof Date){if("date"!==t.preset.type)return this.error(`A ${t.type} input doesn't yield a date object you can check against.`);a=e=>r.toString()===e.toString()}else if("function"===n)a=r;else{if(n!==s)return this.error(`A ${t.type} input cannot return ${r} (${n}).`);a=e=>e===r}t.on.push({check:a,payload:e.contents.trim(),override:i})}const a={color:{},date:{type:"date"},email:{list:!0},file:{type:"file"},number:{type:"number",list:!0},password:{list:!0},range:{type:"number"},search:{list:!0},tel:{list:!0},text:{list:!0},time:{list:!0},url:{list:!0}},r=Object.keys(a).map((e=>"input-"+e));Macro.add(["input",...r],{tags:["onvalue","default","optionsfrom"],skipArgs:["optionsfrom"],isAsync:!0,types:a,names:r,handler(){const a={type:"text",on:[],value:null,any:this.payload[0].contents.trim(),clamp:{min:Number.MIN_SAFE_INTEGER,max:Number.MAX_SAFE_INTEGER},label:"",sanitize:!1,goto:null,variable:null,id:`macro-${this.name}-${e++}`},r=(e=>{let t={},a=0;for(;a<e.length;){const r=e[a];if("object"==typeof r)Array.isArray(r)?e.splice(a--,1,...r):Object.assign(t,r);else{const i=e[a+=1];if(void 0===i)throw new Error("Uneven number of arguments.");if("string"!=typeof r)throw new Error(`Attribute key must be a string, reading: '${r}'.`);t[r.toLowerCase()]=i}a++}return t})(this.args);["type","value","goto","label","sanitize","variable"].forEach((e=>{r.hasOwnProperty(e)&&(a[e]=r[e],delete r[e])})),this.name.includes("-")&&(a.type=this.name.slice(6)),a.preset=this.self.types[a.type];const i=$("<input>").attr({type:a.type,value:a.value,tabindex:0});if(a.variable){if("string"!=typeof a.variable)return this.error(`Variable parameter must be a quoted variable, reading ${a.variable}`);a.value&&State.setVar(a.variable,a.value);const e=State.getVar(a.variable);null!=e&&"file"!==a.type&&i.val(e)}["min","max"].map((e=>r.hasOwnProperty(e)?a.clamp[e]=r[e]:null));const n=$("<label>").attr({class:"macro-input-label"}).text(a.label);let s;i.attr(r).addClass("macro-input").appendTo(n),this.payload.forEach((e=>{switch(e.name){case"onvalue":t.call(this,e,a);break;case"optionsfrom":if(!a.preset.list)return this.error(`${a.type} input cannot have an <<optionsfrom>> argument.`);const r=Scripting.evalJavaScript(`(${e.args.full})`),s=$(`<datalist id='${a.id}-list'>`).appendTo(n);for(const e of r)s.append(`<option value='${e}'>`);i.attr({list:a.id+"-list"});break;case"default":a.on.default=e.contents.trim()}})),i.on("change",this.createShadowWrapper((()=>{let e=((e,{clamp:t,preset:a,sanitize:r})=>{switch(a.type){case"file":return e.files;case"number":const a=Math.clamp(Number(e.value),t.min,t.max);return e.value=a,a;case"date":return new Date(e.value);default:return r?Util.escapeMarkup(e.value):e.value}})(i[0],a);const t=a.on.find((t=>t.check(e)));t&&null!=t.override&&(i[0].value=e=t.override),a.variable&&State.setVar(a.variable,e),s=State.temporary.this,State.temporary.this={config:a,value:e,input:i[0],wrapper:n[0]},this.addShadow("_this"),t?$.wiki(t.payload):a.on.default&&$.wiki(a.on.default),$.wiki(a.any)}),(()=>State.temporary.this=s))),i.on("keypress",(e=>{13===e.which&&null!=a.goto&&Engine.play("object"==typeof a.goto?a.goto.link:a.goto)})),n.appendTo(this.output)}})})();

/* End of the input macro set */