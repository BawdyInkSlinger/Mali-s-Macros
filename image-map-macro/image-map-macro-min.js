(()=>{const e={map:{name:"image-map",tags:["onClick","layers"]},area:{name:"area",tags:["hover","overlay"],liveHover:!1,hoverClickDuration:100,liveOverlay:!1}},a=e=>{let a={},t=0;for(;t<e.length;){const r=e[t];if("object"==typeof r)Array.isArray(r)?e.splice(t--,1,...r):Object.assign(a,r);else{const o=e[t+=1];if(void 0===o)throw new Error("Uneven number of arguments.");if("string"!=typeof r)throw new Error(`Attribute key must be a string, reading: '${r}'.`);a[r.toLowerCase()]=o}t++}return a},t=function(e){const t=this.payload.find((a=>a.name===e));return t&&(t.attr=a(t.args)),t};Macro.add(e.map.name,{tags:e.map.tags,count:0,handler(){if("string"!=typeof this.args[0])return this.error(`Image url must be a string! Currently : ${this.args[0]}.`);const r={name:this.name+this.self.count++,attr:a(this.args.slice(1)),click:t.call(this,e.map.tags[0]),layers:t.call(this,e.map.tags[1])};r.attr.style??="",["width","height"].forEach((e=>{r.attr[e]&&(r.attr.style+=`;${e} : ${r.attr[e]}`)})),this.wrapper=$("<div>").attr(r.attr).addClass(this.name+"-wrapper");const o=$("<img>").attr({src:this.args[0],usemap:"#"+r.name}).appendTo(this.wrapper);if(this.map=$("<map>").attr("name",r.name).appendTo(this.wrapper),new ResizeObserver((()=>{const{naturalHeight:e,naturalWidth:a,height:t,width:r}=o[0],s={y:t/e,x:r/a};this.map.find("area").trigger({type:"sizeToRatio",ratio:s})})).observe(o[0]),this.wrapper.wiki(this.payload[0].contents),r.click&&this.wrapper.on("click",(e=>"AREA"===e.target.nodeName?$.wiki(r.click.contents):null)),r.layers){const e=$(new DocumentFragment).wiki(r.layers.contents).find("img").addClass(this.name+"-layer");this.wrapper.append(e)}this.output.appendChild(this.wrapper[0])}}),Macro.add(e.area.name,{tags:e.area.tags,handler(){let r=this;for(;r&&r.name!==e.map.name;)r=r.parent;if(!r)return this.error(`<<${this.name}>> macro can only be used inside a <<${e.map.name}>> macro!`);const{map:o,wrapper:s}=r,i={shape:null,coords:this.args[0],attr:a(this.args.slice(1)),payload:this.payload[0].contents.trim(),hover:t.call(this,e.area.tags[0]),overlay:t.call(this,e.area.tags[1])};switch("string"==typeof i.coords&&(i.coords=i.coords.split(",")),i.coords=i.coords.map(((e,a)=>Number(e))),i.coords.length){case 0:case 1:case 2:return this.error("Improper number of coordinates!");case 3:i.shape="circle";break;case 4:i.shape="rect";break;default:i.shape="poly"}if("poly"===i.shape&&i.coords.length%2)return this.error("Odd number of coordinates! Each poly point should have an x and y value: x1,y1, x2,y2...");const n=$("<area>").attr(i.attr).attr({shape:i.shape,coords:this.args[0]}).appendTo(o);if(n.on("sizeToRatio",(e=>{const a=i.coords.map(((a,t)=>Number(a)*e.ratio[t%2?"y":"x"]));n.attr({coords:a.join()});const t=(e=>{switch(e.length){case 3:return{top:e[1]-e[2],left:e[0]-e[2],width:2*e[2],height:2*e[2]};case 4:return{left:e[0],top:e[1],width:e[2]-e[0],height:e[3]-e[1]};default:let a="",t=[],r=[];r.min=t.min=1/0,r.max=t.max=0,e.forEach(((e,a)=>{a%2?(e>r.max&&(r.max=e),e<r.min&&(r.min=e),r.push(e)):(e>t.max&&(t.max=e),e<t.min&&(t.min=e),t.push(e))}));for(let e=0;e<t.length;e++)a+=`${t[e]}px ${r[e]}px,`;return{top:0,left:0,"padding-top":r.min+"px","padding-left":t.min+"px",width:t.max-t.min+"px",height:r.max-r.min+"px","clip-path":`polygon(${a.slice(0,-1)})`}}})(a);return i.hover.elem&&i.hover.elem.css(t),i.overlay.elem&&i.overlay.elem.css(t),!1})),n.ariaClick(this.createShadowWrapper((()=>{$.wiki(i.payload),i.hover&&(i.hover.elem.addClass("clicked"),setTimeout((()=>i.hover.elem.removeClass("clicked")),e.area.hoverClickDuration)),i.overlay?.live&&i.overlay.elem.empty().wiki(i.overlay.contents)}))),i.hover){const a=i.hover.attr.live??e.area.liveHover;delete i.hover.attr.live,i.hover.elem=$("<div>").attr(i.hover.attr).wiki(i.hover.contents).addClass("area-hover "+i.shape+(i.attr.disabled?" disabled":"")).appendTo(s),n.on("mouseover focus",(()=>{a&&this.createShadowWrapper(i.hover.elem.empty().wiki(i.hover.contents)),i.hover.elem.show()})).on("mouseout focusout",(()=>i.hover.elem.hide()))}i.overlay&&(i.overlay.live=i.overlay.attr.live??e.area.liveOverlay,delete i.overlay.attr.live,i.overlay.elem=$("<div>").attr(i.overlay.attr).wiki(i.overlay.contents).addClass("area-overlay "+i.shape).appendTo(s)),State.temporary.this={hover:i.hover?.elem,overlay:i.overlay?.elem,area:n},this.addShadow("_this")}})})();