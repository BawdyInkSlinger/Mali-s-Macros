/* Mali's <<either>> macro */

Macro.add("either",{tags:["or","after"],generateID:t=>(new TextEncoder).encode(t).reduce(((t,e)=>t+e),0).toString(32),handler(){let t=State.variables.eitherMacroMemory,e=passage(),a=this.self.generateID(this.payload.map((t=>t.contents+t.arguments)).join());t||(t=State.variables.eitherMacroMemory={}),t[e]||(t[e]=[]);const r=[],n=this.payload.deleteWith((t=>"after"===t.name))?.[0];if(this.args.includes("once")||!!n){if(t[e].includes(a))return!!n&&$(this.output).wiki(n.contents);t[e].push(a)}r.tot=0,this.payload.forEach(((t,e)=>{const a="number"==typeof t.args[0]?Math.abs(t.args[0]):1;if("number"!=typeof a)return this.error("Weight parameter must be a number!");r.tot+=a,r.push({contents:t.contents,weight:a+(r[e-1]?.weight??0)})}));const o=randomFloat(r.tot);$(this.output).wiki(r.find((t=>t.weight>=o)).contents)}});